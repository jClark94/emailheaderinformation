package emailheaderinformation.analysers;

import emailheaderinformation.MainWindow;
import emailheaderinformation.model.VulnerabilityDisclosure;

import java.util.Set;
import java.util.concurrent.ConcurrentSkipListSet;

/**
 * Created by jaclark on 18/04/16.
 */
public class VulnerabilityFinderManagerImpl implements VulnerabilityFinderManager {
  private Set<String> mKeywordSet;
  private MainWindow mMainWindow;
  private Set<VulnerabilityDisclosure> disclosureSet;

  public VulnerabilityFinderManagerImpl (MainWindow mainWindow) {
    mKeywordSet = new ConcurrentSkipListSet<>();
    mMainWindow = mainWindow;
    disclosureSet = new ConcurrentSkipListSet<>();
  }

  @Override public Set<String> getKeywords () {
    return mKeywordSet;
  }

  @Override public Set<VulnerabilityDisclosure> getVulnerabilities () {
    return disclosureSet;
  }

  @Override public boolean noVulnerabilitiesFound () {
    return disclosureSet.isEmpty();
  }

  void lookupVulnerabilityForKeyword (String keyword) {
    // don't repopulate
    if (!mKeywordSet.contains(keyword)) {
      // prevent other processes adding the same results
      mKeywordSet.add(keyword);
      VulnerabilityAnalyser va = new VulnerabilityAnalyser(null,
                                                           mMainWindow,
                                                           keyword,
                                                           disclosureSet);
      mMainWindow.submitToExecutorService(va);
    }
  }
}
